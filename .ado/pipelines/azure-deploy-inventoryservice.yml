# POC of "deploy a single service to AKS" pipeline

name: '$(BuildDefinitionName).$(DayOfYear)$(Rev:.r)'

trigger: none

pr: none

pool:
# hard-code to adt002 for now, must be updated later to use the target env drop-down
  name: 'adt002-private-agents'

variables:
- name: 'synopsys_project_name'
  value: 'DigAPB'
- template: config/configuration.yaml # contains version numbers and global configuration settings
- name:  'workingDirectory'    # Terraform root working directory
  value: 'src/infra/workload'
- name:  'azureServiceConnection' # environment specific service connection
  value: 'az-np-svc-609-DigAPB-ADT'
- name:  'environment' # set the environment name as variable
  value: 'adt002' #update this later to be dynamic

- template: config/variables-values-${{ variables.environment }}.yaml # contains environment-specific values (non-secret)

stages:
# download the needed tfoutput files from the main adt pipeline
#specific pipeline artifact - published
#terraformOutputGlocalInfra
#terraformOutputReleaseUnitInfra
# into into ${{ parameters.workingDirectory }}
- stage: download_artifacts_from_infra_release_pipeline
  displayName: 'Download tf artifacts from Infra Build'
  jobs:
  - job: get_infra_tfoutput
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'specific'
        project: 'b5cf4ec3-b4b5-4309-8c4c-d6628fcae0d8'
        definition: '1820'
        specificBuildWithTriggering: true
        buildVersionToDownload: 'specific'
        pipelineId: '7259'
        artifactName: 'terraformOutputGlobalInfra'
        targetPath: '$(Pipeline.Workspace)/terraformOutputGlobalInfra'

    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'specific'
        project: 'b5cf4ec3-b4b5-4309-8c4c-d6628fcae0d8'
        definition: '1820'
        specificBuildWithTriggering: true
        buildVersionToDownload: 'specific'
        pipelineId: '7259'
        artifactName: 'terraformOutputReleaseUnitInfra'
        targetPath: '$(Pipeline.Workspace)/terraformOutputReleaseUnitInfra'
  
    - task: CmdLine@2
      inputs:
        script: 'ls $(Pipeline.Workspace)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: ${{ parameters.workingDirectory }}
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: setglobalvars
  displayName: 'Set environment variables'
  jobs:
  - job: aparsevars
    steps:
    - template: templates/steps-set-pipeline-variables.yaml # load the set-pipeline-variables function (used for tags and prefixes)

# test app code
- stage: testcode
  displayName: 'Test Application Code'
  jobs:
  - template: templates/jobs-code-tests.yaml
    parameters:
      jobName:          'CodeTests'
      workingDirectory: 'src/app'


- stage: buildapplication
  displayName: 'Build Inventory Service'
  jobs: 
  # this template already includes the call to parse global tf
  - template: templates/jobs-container-build.yaml
    parameters:
      jobName:                  'inventoryservice' # unique pipeline job name
      containerImageName:       '$(inventoryserviceImageName)'  # container image name for CatalogService
      containerImageDockerFile: '$(inventoryserviceDockerfile)' # dockerfile used to build the CatalogService
